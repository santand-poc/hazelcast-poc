apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: hazelcast-role
rules:
  - apiGroups: [""]
    resources:
      - pods
      - services
      - endpoints
    verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: hazelcast-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hazelcast-role
subjects:
  - kind: ServiceAccount
    name: default
    namespace: default
---
# ==========================
# âœ… Persistent Volume Claim dla PostgreSQL (zapewnia trwaÅ‚oÅ›Ä‡ danych)
# ==========================
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
# ==========================
# âœ… PostgreSQL Service (Headless) - uÅ¼ywane przez aplikacjÄ™ Spring Boot
# ==========================
apiVersion: v1
kind: Service
metadata:
  name: postgres
spec:
  ports:
    - port: 5432
      targetPort: 5432
  selector:
    app: postgres
  clusterIP: None  # ðŸ”¥ Headless service dla Å‚atwego dostÄ™pu w Kubernetes
---
# ==========================
# âœ… StatefulSet dla PostgreSQL
# ==========================
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
spec:
  serviceName: "postgres"
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:15  # âœ… Stabilna wersja PostgreSQL
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              value: user  # âœ… `spring.datasource.username`
            - name: POSTGRES_PASSWORD
              value: password  # âœ… `spring.datasource.password`
            - name: POSTGRES_DB
              value: products_db  # âœ… `spring.datasource.url`
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-storage
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pvc
---
# ==========================
# âœ… Hazelcast Service (Headless) - Discovery w Kubernetes
# ==========================
apiVersion: v1
kind: Service
metadata:
  name: hazelcast-service
  labels:
    app: hazelcast
spec:
  clusterIP: None  # ðŸ”¥ Headless Service wymagany dla Hazelcast Kubernetes Discovery
  selector:
    app: hazelcast  # âœ… Musi pasowaÄ‡ do Deployment
  ports:
    - port: 5701
      name: hazelcast
---
# ==========================
# âœ… LoadBalancer dla aplikacji Spring Boot
# ==========================
apiVersion: v1
kind: Service
metadata:
  name: hazelcast-poc-load-balancer
spec:
  selector:
    app: hazelcast
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
  type: LoadBalancer
---
# ==========================
# âœ… Deployment dla aplikacji Spring Boot (Spring Boot + Hazelcast)
# ==========================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hazelcast-poc-deployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: hazelcast
  template:
    metadata:
      labels:
        app: hazelcast
    spec:
      containers:
        - name: hazelcast-poc-container
          image: santandpoc/hazelcast-poc:1.6
          ports:
            - containerPort: 5701  # âœ… Port Hazelcast
            - containerPort: 8080  # âœ… Port aplikacji Spring Boot
          env:
            - name: SPRING_DATASOURCE_URL
              value: jdbc:postgresql://postgres:5432/products_db  # âœ… UÅ¼ywa usÅ‚ugi PostgreSQL
            - name: SPRING_DATASOURCE_USERNAME
              value: user
            - name: SPRING_DATASOURCE_PASSWORD
              value: password
            - name: HAZELCAST_KUBERNETES_SERVICE_NAME
              value: hazelcast-service  # âœ… Poprawne ustawienie zamiast `service-dns`
            - name: SPRING_PROFILES_ACTIVE
              value: KUBERNETES
          livenessProbe:
            httpGet:
              port: 8080
              path: /
            periodSeconds: 10
            initialDelaySeconds: 15
            failureThreshold: 3
          readinessProbe:
            httpGet:
              port: 8080
              path: /
            periodSeconds: 10
            initialDelaySeconds: 10
            failureThreshold: 3
